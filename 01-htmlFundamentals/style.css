/* 
h1,
h2,
h3,
h4,
p,
li {
  font-family: sans-serif;
  color: #444;
} */
/* No longer need this after inheritance */

/*
GLOBAL RESET first
*/
* {
  margin: 0;
  padding: 0;
  /* easily overwritten*/
}
/* PAGE SECTIONS */
body {
  /* Properties related to text should be on the body. Remember that no all properties get inherited, check the list in the pdf*/
  font-family: sans-serif;
  color: #444;
  border-top: 10px solid #1098ad;

  position: relative; /* Because of the button, positioned absolute, here we stablish the relation element */
}

.container {
  /* To center the page*/
  width: 800px;
  /* margin-left: auto;
  margin-right: auto; */
  margin: 0 auto;
}
.main-header {
  background-color: #f7f7f7;
  padding: 20px 40px; /* left, right or all in one: value1 (top and bottom), value2 (left and right*/
  margin-bottom: 60px;
  /* height: 80px; */ /* if we have a fixed height, when we change the nav to block, the elements will overlap other (no longer fit, so the box does not expand. */
}
nav {
  font-size: 18px;
}
article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
}

aside {
  background-color: #f7f7f7;
  /* border: 5px solid #1098ad; */
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  /* padding-top: 50px;
  padding-bottom: 50px; */
  padding: 50px 0;
  width: 500px;
}

/* SMALLER ELEMENTS */
h1,
h2,
h3 {
  /* inherited styles are easily overwritten */
  color: #1098ad;
}
h1 {
  font-size: 26px;

  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
  position: relative;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
}

h4 {
  font-size: 20px;

  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 22px;

  line-height: 1.5;
  margin-bottom: 15px;
}

ol,
ul {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  /* margin */
  margin-bottom: 10px;
}

li:last-child {
  /* Usually we don't want the last one to have a margin, so we overwrite it */
  margin-bottom: 0; /* no unit */
}
#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.related {
  list-style: none;
}

/* .first-li {
  font-weight: bold;
} */
li:first-child {
  font-weight: bold;
}

/* styling links - always in this order */
a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  /* color: #777 */
  color: #1098ad; /* normally the same as the color that we specify in the link */
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline orangered;
}

a:active {
  background-color: black;
}

.post-img {
  /* We specify the height and width of the images in the css normally, not in html */
  /* width: 800px;
  height: auto;  */
  /* we need to do this because we've specified in html, if we haven't done that we could just specify the width and the height would be set to auto. */
  width: 100%; /* of the parent element, first mention of responsive design */
  height: auto;

  /* Images behave like inline block elements */
}

/* Block and inline elements */
nav a {
  /* All the links in the nav */
  /* background-color: orangered; */
  /* margin: 20px; */ /* No vertical space was created, remember, inline elements only change the width (no vertical space */
  /* padding: 20px; */ /* we can add padding, but no new space was created, notice the overlap to other elements */
  /* display: block; */

  margin-right: 30px;
  margin-top: 10px;
  display: inline-block;
}

nav a:link:last-child {
  /* Two pseudo classes chained */
  margin-right: 0;
}

/*  ABSOLUTE AND RELATIVE POSITIONING - Remember that the button starts inflow, only after we change the display */
button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;
  position: absolute;
  /* top: 50px;
  left: 50px;  */
  /* By default, these values are in relation to the viewport, but we want to set this values in relation to other element, where we need to specifically state position relative */

  /* In this case we want to position the button in relation to the page, so, the body element. It can be other, what's to retain is the fact that it is the first parent element with relative positioning that is going to be accounted  */

  bottom: 50px;
  right: 50px;
}

h1::first-letter {
  /* (::) PSEUDO ELEMENTS - it is the book emoji */
  font-style: normal;
  margin-right: 5px;
}

/* p::first-line {
  color: red;
} */

/* h3 + p {
  Adjacent sibling selector (+), the first sibling after the h3 elements (if we just wanted the first letter ::first-line) 
   
  color: red; 
} */

h2::after {
  content: "TOP"; /* Mandatory, we need "" if we don't want content */
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: -25px;
}
